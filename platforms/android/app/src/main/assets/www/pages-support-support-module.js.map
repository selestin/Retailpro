{"version":3,"sources":["webpack:///./src/app/pages/support/support-routing.module.ts","webpack:///./src/app/pages/support/support.html","webpack:///./src/app/pages/support/support.module.ts","webpack:///./src/app/pages/support/support.scss","webpack:///./src/app/pages/support/support.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEf;AAExC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAW;KACvB;CACF,CAAC;AAMF;IAAA;IAAwC,CAAC;IAA5B,wBAAwB;QAJpC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,wBAAwB,CAAI;IAAD,+BAAC;CAAA;AAAJ;;;;;;;;;;;;AChBrC,0iC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACA;AACL;AAC4B;AAapE;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAXzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,gFAAwB;aACzB;YACD,YAAY,EAAE;gBACZ,oDAAW;aACZ;SACF,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;AClB1B,8CAA8C,oBAAoB,sBAAsB,uBAAuB,EAAE,oCAAoC,qBAAqB,EAAE,wBAAwB,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9J;AAGK;AASlE;IAIE,qBACS,SAA0B,EAC1B,SAA0B;QAD1B,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAiB;QALnC,cAAS,GAAG,KAAK,CAAC;IAMd,CAAC;IAEC,qCAAe,GAArB;;;;;4BACgB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,OAAO,EAAE,gDAAgD;4BACzD,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAEK,4BAAM,GAAZ,UAAa,IAAY;;;;;;wBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;6BAElB,IAAI,CAAC,KAAK,EAAV,wBAAU;wBACZ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;wBACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBAET,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACxC,OAAO,EAAE,qCAAqC;gCAC9C,QAAQ,EAAE,IAAI;6BACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;;KAEzB;IA9BU,WAAW;QANvB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAMoB,8DAAe;YACf,8DAAe;OANxB,WAAW,CAqDvB;IAAD,kBAAC;CAAA;AArDuB","file":"pages-support-support-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SupportPage } from './support';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SupportPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SupportPageRoutingModule { }\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Support</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"support-logo\\\">\\n    <img src=\\\"assets/img/appicon.svg\\\" alt=\\\"Ionic Logo\\\">\\n  </div>\\n\\n  <form #submitForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"submit(submitForm)\\\">\\n    <ion-list lines=\\\"none\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Enter your support message below</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"supportMessage\\\" name=\\\"supportQuestion\\\" #supportQuestion=\\\"ngModel\\\" rows=\\\"6\\\" required></ion-textarea>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-text color=\\\"danger\\\">\\n      <p [hidden]=\\\"supportQuestion.valid || submitted === false\\\" padding-left>\\n        Support message is required\\n      </p>\\n    </ion-text>\\n\\n    <div padding>\\n      <ion-button expand=\\\"block\\\" type=\\\"submit\\\">Submit</ion-button>\\n    </div>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SupportPage } from './support';\nimport { SupportPageRoutingModule } from './support-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SupportPageRoutingModule\n  ],\n  declarations: [\n    SupportPage,\n  ]\n})\nexport class SupportModule { }\n","module.exports = \"page-support .support-logo {\\n  padding: 20px 0;\\n  min-height: 200px;\\n  text-align: center; }\\n\\npage-support .support-logo img {\\n  max-width: 150px; }\\n\\npage-support .list {\\n  margin-bottom: 0; }\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { AlertController, ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'page-support',\n  templateUrl: 'support.html',\n  styleUrls: ['./support.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SupportPage {\n  submitted = false;\n  supportMessage: string;\n\n  constructor(\n    public alertCtrl: AlertController,\n    public toastCtrl: ToastController\n  ) { }\n\n  async ionViewDidEnter() {\n    const toast = await this.toastCtrl.create({\n      message: 'This does not actually send a support request.',\n      duration: 3000\n    });\n    await toast.present();\n  }\n\n  async submit(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n      this.supportMessage = '';\n      this.submitted = false;\n\n      const toast = await this.toastCtrl.create({\n        message: 'Your support request has been sent.',\n        duration: 3000\n      });\n      await toast.present();\n    }\n  }\n\n  // If the user enters text in the support question and then navigates\n  // without submitting first, ask if they meant to leave the page\n  // async ionViewCanLeave(): Promise<boolean> {\n  //   // If the support message is empty we should just navigate\n  //   if (!this.supportMessage || this.supportMessage.trim().length === 0) {\n  //     return true;\n  //   }\n\n  //   return new Promise((resolve: any, reject: any) => {\n  //     const alert = await this.alertCtrl.create({\n  //       title: 'Leave this page?',\n  //       message: 'Are you sure you want to leave this page? Your support message will not be submitted.',\n  //       buttons: [\n  //         { text: 'Stay', handler: reject },\n  //         { text: 'Leave', role: 'cancel', handler: resolve }\n  //       ]\n  //     });\n\n  //     await alert.present();\n  //   });\n  // }\n}\n"],"sourceRoot":""}